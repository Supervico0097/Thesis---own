# Here you can set different probabilities in order to generate synthetic data based on them
# add '-' if this probability should not be considered

  music:
    WEEKS_NUM: 100 # instead of dates, just num of weeks
    users_number: 10000 #this will be approximate numebr of user by END_DATE
    artists_number: 1000
#    START_DATE:  2011-01-01  #YYYY-MM-DD
#    END_DATE:  2023-01-01  #YYYY-MM-DD

    # PROBABILITIES

    #when creating users
    probabilities_genre_users: [400, 700,300, 200, 170, 100, 150, 400] #['Pop', 'Rock', 'Hip-hop', 'Electronic', 'Jazz', 'Classical', 'Blues', 'Alternative']



    #when creating artists
    probabilities_genre_artists: [ 300, 200,100, 200, 500, 100, 300, 400 ] #['Pop', 'Rock', 'Hip-hop', 'Electronic', 'Jazz', 'Classical', 'Blues', 'Alternative']

    #user will access favourite playlist based on probability below
    p_favorite_playlist: 0.6


    # probability user will listen to song in favorites 0-1
    p_favorite: 0.6

    #probability to repeat favorite song
    p_repeat_fav_sg: 0.55


    #TODO:

    #probability to repeat not_favorite song but favorite genre
    p_repeat_nt_fav_sg_fv_gn: 0.5

    #probability to repeat not_favorite song and not favorite genre
    p_repeat_nt_fav_sg_nt_fv_gn: 0.3


    # average number of random songs a music fan user goes through per week
    min_songs_per_week: 0
    max_songs_per_week: 150



